generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url =  env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  password      String?
  order         Order[]
  accounts      Account[]
  sessions      Session[]
  emailVerified DateTime? 
  stripeCustomerId String?
}


model Order {
  id            String @id @default(cuid())
  userId        String
  paymentIntentId String? @unique
  amount        Float
  currency      String
  status        String
  user          User @relation(fields: [userId], references: [id])
  products      Product[]
  createdDate   DateTime @default(now())
}

model Product {
  id          String    @id @default(cuid())
  name        String
  orders      Order[]
  image       String?
  description String?
  unit_amount Float
  quantity    Float @default(0)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}